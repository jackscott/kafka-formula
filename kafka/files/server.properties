#!jinja|yaml
{%- from "kafka/map.jinja" import kafka, config with context %}
#  :NOTE: This file is managed  by Salt, any changes will not be saved
#
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# see kafka.server.KafkaConfig for additional details and defaults

log.dir={{ kafka.data_dir }}

{%- with zk = config.zookeeper  %}
{%- for k,v in zk.items() %}
{%- if k not in  ['connect', 'chroot'] -%}
{{ 'zookeeper.%s'|format(k)}}={{ v }}
{%- endif %}
{%- endfor %}
zookeeper.connect={{ zk_list|join(',') }}{{ config.zookeeper.get('chroot', '/kafka') }}
{%- endwith %}

{%- if config.listeners %}
listeners="{{ config.listeners|join(',') }}"
{%- else %}
listeners=PLAINTEXT://:9092
{%- endif -%}

{%- macro fmt_value(value) -%}
{%- if value is not string and value is iterable -%}
{{ value|join(",") }}
{%- elif value == True or value == False -%}
{{ value|string|lower }}
{%- else -%}
{{ value }}
{%- endif -%}
{%- endmacro %}

{%- for section, data in config.items() -%}

{%- if section not in ['zookeeper', 'listeners', 'broker_id', 'zookeeper_chroot', 'advertised_host', 'advertised_port'] -%}
{%- macro fmt(key, value) -%}
{%- if section == 'log' and key in ['dir', 'dirs'] %}
{%- else %}
{% if value is not none %}
{{ '%s.%s'|format(section, key) }}={{ fmt_value(value) }}
{%- endif %}
{%- endif -%}
{%- endmacro -%}

{%- if data is mapping -%}
{%- for k,v in data.items() %}
{{ fmt(k,v) }}
{%- endfor -%}
{%- elif data is not none %}
{{ section }}={{ fmt_value(data) }}
{%- else -%}
# I wasnt sure what to do with {{ section }} => {{ data }}
{%- endif -%}
{%- endif -%}
{%- endfor -%}
